{"version":3,"sources":["components/Start.js","components/NavComponent.js","components/NewAuction.js","components/ExpiredAuction.js","components/NewBid.js","components/AuctionDetails.js","components/ExpiredAuctionDetails.js","App.js","serviceWorker.js","index.js"],"names":["Start","auctionList","handleAuction","renderDetails","object","list","undefined","map","key","AuktionID","Date","parse","SlutDatum","now","onClick","to","Titel","Beskrivning","Utropspris","replace","colSpan","striped","bordered","hover","variant","withRouter","searchFunc","history","searchValue","React","createRef","Navbar","bg","Brand","href","Nav","className","NavDropdown","title","id","Item","Form","inline","onSubmit","e","ref","preventDefault","console","log","current","value","alert","toLowerCase","push","handleSubmit","FormControl","type","placeholder","Button","NewAuction","props","addNewObject","state","StartDatum","StartDatumTid","SlutDatumTid","GruppKod","SkapadAv","checkValidation","jsonObject","NewAuctionObject","handleChange","setState","target","toISOString","slice","style","paddingLeft","paddingRight","paddingTop","paddingBottom","backgroundColor","this","Group","Label","Control","onChange","required","Feedback","disabled","handleDateChange","as","Component","ExpiredAuction","expiredList","result","length","obj","NewBid","placeBid","bidName","bid","pris","newBidFunc","identitet","border","AuctionDetails","auction","bidList","deleteAuction","updateAuctionFunc","updateAuction","confirmAlert","customUI","onClose","defaultValue","Number","document","getElementById","color","bids","BudID","Budgivare","Summa","textAlign","ExpiredAuctionDetails","ApiController","fetch","method","body","JSON","stringify","headers","then","data","handleAuctionDetails","a","getBids","auctionDetails","auctionDetailsBids","url","res","json","newBid","auctionId","mode","getData","response","apiData","expired","filter","x","active","searchVal","searchList","includes","window","location","assign","rs","exact","path","render","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oQA+CeA,EA3CD,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACtBC,EAAgB,SAACC,GACrBF,EAAcE,IAIZC,OAAuBC,IAAhBL,EAA6BA,EAAYM,IAAI,SAAAH,GAAM,OAC5D,wBAAII,IAAKJ,EAAOK,WACJC,KAAKC,MAAMP,EAAOQ,WAAaF,KAAKG,MAC3C,wBAAIC,QAAS,WAAQX,EAAcC,KAAW,kBAAC,IAAD,CAAMW,GAAG,mBAAmBX,EAAOK,YAEjF,wBAAIK,QAAS,WAAQX,EAAcC,KAAW,kBAAC,IAAD,CAAMW,GAAG,0BAA0BX,EAAOK,YAC3F,4BAAKL,EAAOY,OACZ,4BAAKZ,EAAOa,aACZ,4BAAKb,EAAOc,WAAZ,MACA,iCAA0BZ,IAArBF,EAAOQ,UAA2BR,EAAOQ,UAAUO,QAAQ,IAAK,KAAO,QAE1E,4BACJ,wBAAIC,QAAQ,KAAZ,0BAGF,OACE,6BACE,kBAAC,IAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QACpC,+BACE,4BACE,iCACA,qCACA,2CACA,0CACA,2CAGJ,+BAEGnB,M,4DCDIoB,kBAjCd,YAA+C,IAAvBC,EAAsB,EAAtBA,WAAWC,EAAW,EAAXA,QAE5BC,EAAcC,IAAMC,YAcxB,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOR,QAAQ,QACtB,kBAACO,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,WACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAAaC,MAAM,OAAOC,GAAG,sBACzB,kBAACF,EAAA,EAAYG,KAAb,SAAmB,kBAAC,IAAD,CAAMzB,GAAG,KAAT,SACnB,kBAACsB,EAAA,EAAYG,KAAb,SAAmB,kBAAC,IAAD,CAAMzB,GAAG,eAAT,WACnB,kBAACsB,EAAA,EAAYG,KAAb,SAAmB,kBAAC,IAAD,CAAMzB,GAAG,mBAAT,uBAG3B,kBAAC0B,EAAA,EAAD,CAAMC,QAAM,EAACC,SAAU,SAACC,IAtBX,SAACC,EAAKD,GAGnB,GAFAA,EAAEE,iBACFC,QAAQC,IAAIH,EAAII,QAAQC,OACE,KAAtBL,EAAII,QAAQC,MAKZ,OAAOC,MAAM,oCAJbzB,EAAWmB,EAAII,QAAQC,MAAME,eAC7BzB,EAAQ0B,KAAK,KAiBeC,CAAa1B,EAAagB,KACtD,kBAACW,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASrB,UAAU,UAAUS,IAAKjB,IACvE,kBAAC8B,EAAA,EAAD,CAAQlC,QAAQ,eAAegC,KAAK,UAApC,c,QC9BKG,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAeVC,aAAe,SAACjB,GAAO,IAAD,EAE6C,EAAKkB,MAD9D9C,EADY,EACZA,MAAOC,EADK,EACLA,YAAa8C,EADR,EACQA,WAAYC,EADpB,EACoBA,cAClCpD,EAFc,EAEdA,UAAWqD,EAFG,EAEHA,aAAcC,EAFX,EAEWA,SAAUhD,EAFrB,EAEqBA,WAAYiD,EAFjC,EAEiCA,SAEnD,GADAvB,EAAEE,kBACE,EAAKsB,kBAKL,OAAOjB,MAAM,oBAJb,IAAIkB,EAAa,CAAErD,MAAOA,EAAOC,YAAaA,EAAa8C,WAAYA,EAAW,IAAIC,EAAepD,UAAWA,EAAU,IAAIqD,EAAc/C,WAAYA,EAAYgD,SAAUA,EAAUC,SAAUA,GAClM,EAAKP,MAAMU,iBAAiBD,IAtBjB,EA6BnBD,gBAAkB,WAAO,IAAD,EAC0C,EAAKN,MAA7D9C,EADc,EACdA,MAAOC,EADO,EACPA,YAAaL,EADN,EACMA,UAAWM,EADjB,EACiBA,WAAYiD,EAD7B,EAC6BA,SACjD,MAAc,KAAVnD,GAAgC,KAAhBC,GAAoC,KAAdL,GAAmC,KAAfM,GAAkC,KAAbiD,GA/BpE,EAqCnBI,aAAe,SAAC3B,GACZ,EAAK4B,SAAL,eACK5B,EAAE6B,OAAOlC,GAAKK,EAAE6B,OAAOvB,SAvCb,EA2CnBpC,QAAU,kBAAM,EAAK8C,MAAMjC,QAAQ0B,KAAK,MAzCpC,EAAKS,MAAQ,CACTrD,UAAW,GACXO,MAAO,GACPC,YAAa,GACb8C,YAAY,IAAIrD,MAAOgE,cAAcC,MAAM,EAAG,IAC9CX,cAAe,GACfpD,UAAW,GACXqD,aAAc,GACdC,SAAU,KACVhD,WAAY,GACZiD,SAAU,IAZC,E,sEA+Cf,OACI,yBAAKS,MAFS,CAAEC,YAAa,QAASC,aAAc,QAASC,WAAY,OAAQC,cAAe,QAASC,gBAAiB,cAGtH,kDACJ,kBAACxC,EAAA,EAAD,CAAME,SAAUuC,KAAKrB,cACjB,kBAACpB,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,cACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,QAAQiB,KAAK,OAAOC,YAAY,cAAc6B,SAAUJ,KAAKX,gBAElF,kBAAC9B,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,oBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,cAAciB,KAAK,OAAOC,YAAY,oBAAoB6B,SAAUJ,KAAKX,gBAE9F,kBAAC9B,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,cACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAcE,UAAQ,EAAChD,GAAG,aAAaiB,KAAK,SAASC,YAAY,cAAc6B,SAAUJ,KAAKX,eAC9F,kBAAC9B,EAAA,EAAK4C,QAAQG,SAAd,CAAuBhC,KAAK,WACxB,8DAGR,kBAACf,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,aACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAcE,UAAQ,EAAChD,GAAG,WAAWiB,KAAK,OAAOC,YAAY,kBAAkB6B,SAAUJ,KAAKX,gBAElG,kBAAC9B,EAAA,EAAK0C,MAAN,KACQ,kBAAC1C,EAAA,EAAK2C,MAAN,2BACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAeI,UAAQ,EAACF,UAAQ,EAAChD,GAAG,aAAaiB,KAAK,OAAON,MAAOgC,KAAKpB,MAAMC,WAAYuB,SAAUJ,KAAKQ,mBAC1G,kBAACjD,EAAA,EAAK2C,MAAN,mBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,gBAAgBoD,GAAG,SAASL,SAAUJ,KAAKX,cACpD,4BAAQrB,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,WAGhB,kBAACT,EAAA,EAAK0C,MAAN,KACQ,kBAAC1C,EAAA,EAAK2C,MAAN,yBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAcE,UAAQ,EAAChD,GAAG,YAAYiB,KAAK,OAAOC,YAAY,4BAA4B6B,SAAUJ,KAAKX,eACzG,kBAAC9B,EAAA,EAAK2C,MAAN,iBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,eAAeoD,GAAG,SAASL,SAAUJ,KAAKX,cACnD,4BAAQrB,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,WAGhB,kBAACQ,EAAA,EAAD,CAAQF,KAAK,SAAShC,QAAQ,UAAUV,QAASoE,KAAKrB,cAAtD,QACA,kBAACH,EAAA,EAAD,CAAQlC,QAAQ,SAASV,QAASoE,KAAKpE,SAAvC,gB,GAxJwB8E,aCCzB,SAASC,EAAT,GAAyD,IAA/BC,EAA8B,EAA9BA,YAAa5F,EAAiB,EAAjBA,cAM9C6F,EAAgC,IAAvBD,EAAYE,OACnBF,EAAYvF,IAAI,SAAA0F,GAAG,OACjB,wBAAIzF,IAAKyF,EAAIxF,WACT,wBAAIK,QAAS,WANrBZ,EAM2C+F,KAAQ,kBAAC,IAAD,CAAMlF,GAAG,0BAA0BkF,EAAIxF,YAClF,4BAAKwF,EAAIjF,OACT,4BAAKiF,EAAIhF,aACT,iCAAuBX,IAAlB2F,EAAIrF,UAA2BqF,EAAIrF,UAAUO,QAAQ,IAAK,KAAO,KACtE,4BAAK8E,EAAI9B,aAGf,iDACN,OACI,kBAAC,IAAD,CAAO9C,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QAClC,+BACI,4BACI,oCACA,qCACA,2CACA,wCACA,wCAGR,+BACKuE,I,IC9BIG,E,YACjB,WAAYtC,GAAQ,IAAD,8BACf,4CAAMA,KAMVW,aAAe,SAAC3B,GACZ,EAAK4B,SAAL,eACK5B,EAAE6B,OAAOlC,GAAKK,EAAE6B,OAAOvB,SATb,EAanBiD,SAAW,WACP,MAA2B,KAAvB,EAAKrC,MAAMsC,SAAqC,OAAnB,EAAKtC,MAAMuC,IAChClD,MAAM,oBAET,EAAKW,MAAMuC,IAAM,EAAKzC,MAAM0C,KACzBnD,MAAM,2BAGlB,EAAKS,MAAM2C,WAAW,EAAKzC,MAAMuC,IAAK,EAAKzC,MAAM4C,UAAW,EAAK1C,MAAMsC,UAnBvE,EAAKtC,MAAQ,CACTuC,IAAK,EACLD,QAAS,IAJE,E,sEAyBf,OACI,yBAAKxB,MAAO,CAAEC,YAAa,QAASC,aAAc,QAAQE,cAAc,QAASyB,OAAQ,oBACrF,6BACA,6CACA,kBAAChE,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,aACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,UAAUiB,KAAK,OAAOC,YAAY,kBAAkB6B,SAAUJ,KAAKX,gBAExF,kBAAC9B,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,cACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAcE,UAAQ,EAAChD,GAAG,MAAMiB,KAAK,SAASC,YAAY,cAAc6B,SAAUJ,KAAKX,eACvF,6BACA,kBAACb,EAAA,EAAD,CAAQF,KAAK,SAAShC,QAAQ,UAAUV,QAASoE,KAAKiB,UAAtD,mB,GAtCgBtE,IAAM+D,W,uBCG3B,SAASc,EAAT,GAAuF,IAA9DC,EAA6D,EAA7DA,QAAQC,EAAqD,EAArDA,QAAQL,EAA6C,EAA7CA,WAAWM,EAAkC,EAAlCA,cAAcC,EAAoB,EAApBA,kBAcxEC,EAAgB,WAAQC,uBAAc,CACvCC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACE,6BACI,kBAACzE,EAAA,EAAD,KACA,kBAACA,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,cACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,QAAQiB,KAAK,OAAO2D,aAAcR,EAAQ3F,SAE/D,kBAACyB,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,oBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,cAAciB,KAAK,OAAO2D,aAAcR,EAAQ1F,eAErE,kBAACwB,EAAA,EAAK0C,MAAN,KACI,kBAAC1C,EAAA,EAAK2C,MAAN,cACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAcE,UAAQ,EAAChD,GAAG,aAAaiB,KAAK,SAAS2D,aAAcC,OAAOT,EAAQzF,eAEtF,kBAACuB,EAAA,EAAK0C,MAAN,KACQ,kBAAC1C,EAAA,EAAK2C,MAAN,yBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAcE,UAAQ,EAAChD,GAAG,YAAYiB,KAAK,OAAOC,YAAY,8BAC9D,kBAAChB,EAAA,EAAK2C,MAAN,iBACA,kBAAC3C,EAAA,EAAK4C,QAAN,CAAc9C,GAAG,eAAeoD,GAAG,UAC3B,4BAAQzC,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,SACA,4BAAQA,MAAM,YAAd,WAIlB,kBAACQ,EAAA,EAAD,CAAQlC,QAAQ,UACdV,QAAS,YAvEA,WACjB,IAAIV,EAAS,CAACK,UAAWkG,EAAQlG,UAAWO,MAAO,GAAIC,YAAa,GAAIC,WAAY,GAAIN,UAAW,GACnGmD,WAAY4C,EAAQ5C,WAAYG,SAAU,KAAMC,SAAUwC,EAAQxC,UAClE/D,EAAOY,MAAQqG,SAASC,eAAe,SAASpE,MAChD9C,EAAOa,YAAcoG,SAASC,eAAe,eAAepE,MAC5D9C,EAAOc,WAAamG,SAASC,eAAe,cAAcpE,MAC1D9C,EAAOQ,UAAYyG,SAASC,eAAe,aAAapE,MAAQ,IAAImE,SAASC,eAAe,gBAAgBpE,MAC5GH,QAAQC,IAAI5C,GACZ2C,QAAQC,IAAIqE,SAASC,eAAe,aAAapE,MAAQ,IAAImE,SAASC,eAAe,gBAAgBpE,OACrG4D,EAAkB1G,GA+DVkD,GACC4D,MAHH,gBAtDE,OA+DI,kBAACxD,EAAA,EAAD,CAAQlC,QAAQ,SAASV,QAASoG,GAAlC,gBA4BVnB,OAAqBzF,IAAZqG,EACb,6BACM,4BAAKA,EAAQ3F,MAAb,KAAsB2F,EAAQlG,WAAe,6BAC7C,wBAAImE,MAAO,CAAC2C,MAAM,QAAlB,kBAA2DjH,IAAtBqG,EAAQ/F,UAA2B+F,EAAQ/F,UAAUO,QAAQ,IAAK,KAAO,KAC9G,6BACA,+CAAqBwF,EAAQzF,WAA7B,MACA,8BAGN,2DAEEsG,EAA0B,IAAnBZ,EAAQZ,OACfY,EAAQrG,IAAI,SAAA8F,GAAG,OACb,4BACE,4BAAKA,EAAIoB,OACT,4BAAKpB,EAAIqB,WACT,4BAAKrB,EAAIsB,UAKV,4BACE,4BAAI,8CACJ,4BAAI,kBAACjE,EAAA,EAAD,CAAQ5C,QAAS,WA3CPkG,uBAAc,CACjCC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACE,yBAAK9E,UAAU,aACb,6CACA,+DACA,kBAACsB,EAAA,EAAD,CAAQlC,QAAQ,SACdV,QAAS,WACT+F,EAAcF,EAAQlG,WACtByG,MAHF,OAHF,OAWE,kBAACxD,EAAA,EAAD,CAAQlC,QAAQ,UAAUV,QAASoG,GAAnC,WA6BsC1F,QAAQ,UAA3C,UAAJ,KACA,4BAAI,kBAACkC,EAAA,EAAD,CAAQ5C,QAAS,WAAOiG,KAAkBvF,QAAQ,WAAlD,YAQb,OACI,yBAAKoD,MAAO,CAACgD,UAAW,SAAU3C,gBAAiB,cAChDc,EACD,kBAAC,IAAD,CAAO1E,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QAClC,+BACI,4BACE,iCACA,oCACA,wCAGN,+BACGgG,IAGP,kBAAC,EAAD,CAAQlB,KAAMK,EAAQzF,WAAYsF,UAAWG,EAAQlG,UAAW8F,WAAYA,KC/JvE,SAASsB,EAAT,GAAmD,IAAnBlB,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,QAE/CY,EAA0B,IAAnBZ,EAAQZ,OAEf,4BACI,4BAAKY,EAAQA,EAAQZ,OAAQ,GAAGyB,OAChC,4BAAKb,EAAQA,EAAQZ,OAAQ,GAAG0B,WAChC,4BAAKd,EAAQA,EAAQZ,OAAQ,GAAG2B,MAAhC,OAIN,+CAEE5B,OAAqBzF,IAAZqG,EACX,6BACM,4BAAKA,EAAQ3F,OACb,6BACA,+CAAqB2F,EAAQzF,WAA7B,MACA,wBAAI0D,MAAO,CAAC2C,MAAO,QAAnB,uBAAiEjH,IAAtBqG,EAAQ/F,UAA2B+F,EAAQ/F,UAAUO,QAAQ,IAAK,KAAO,MAG1H,0DAEF,OACI,6BACI,yBAAKyD,MAAO,CAACgD,UAAW,WACnB7B,GAEL,kBAAC,IAAD,CAAO1E,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QAClC,+BACI,4BACI,iCACA,oCACA,6CAGJ,+BACKgG,K,IC9BJM,E,YACnB,WAAYlE,GAAQ,IAAD,8BACjB,4CAAMA,KAcRU,iBAAmB,SAAClE,GAalB,OAVA2H,MAFS,uDAEE,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAU/H,GACrBgI,QAAS,CACP,OAAU,oCACV,eAAgB,sBAEjBC,KAAK,SAAUC,GAChBvF,QAAQC,IAAIsF,KAENnF,MAAM,mBA5BG,EA+BnBoF,qBA/BmB,sCA+BI,WAAOnI,GAAP,eAAAoI,EAAA,qEACJ,EAAKC,QAAQrI,EAAOK,WADhB,OACjB+G,EADiB,OAErBzE,QAAQC,IAAIwE,GACZzE,QAAQC,IAAI5C,GACZ,EAAKoE,SAAS,CACZkE,eAAgBtI,EAChBuI,mBAAoBnB,IAND,yCA/BJ,wDAyCnBiB,QAzCmB,sCAyCT,WAAOlG,GAAP,iBAAAiG,EAAA,4DACFI,EADE,2DACwDrG,GADxD,SAESwF,MAAMa,GAAKP,KAAK,SAAAQ,GAAG,OAAIA,EAAIC,SAFpC,cAEJtB,EAFI,yBAGDA,GAHC,yCAzCS,wDA8CnBuB,OA9CmB,sCA8CV,WAAO1C,EAAK2C,EAAW5C,GAAvB,mBAAAoC,EAAA,wDAEDI,EAFC,2DAEyDI,GAC5DxB,EAAO,EAAK1D,MAAM6E,mBAElBvI,EAAS,CAAEsH,UAAWtB,EAASuB,MAAOtB,EAAK5F,UAAWuI,EAAWvB,MAAO,KAC5E1E,QAAQC,IAAI5C,GACQ,IAAhBoH,EAAKxB,OAPF,sBAQDwB,EAAKA,EAAKxB,OAAS,GAAG2B,MAAQtB,GAR7B,iBASH,EAAKF,SAASyC,EAAKxI,GACnB+C,MAAM,kBAVH,iDAYIA,MAAM,uBAZV,gCAgBL,EAAKgD,SAASyC,EAAKxI,GACnB+C,MAAM,kBAjBD,0CA9CU,4DAmEnBgD,SAAW,SAACyC,EAAKxI,GACf2H,MAAMa,EAAK,CACTZ,OAAQ,OACRC,KAAMC,KAAKC,UAAU/H,GACrBgI,QAAS,CACP,OAAU,oCACV,eAAgB,oBAElBa,KAAM,SACLZ,KAAK,SAAUC,GAChBvF,QAAQC,IAAI,oBAAqB,oBA7ElB,EAkFnBkG,QAlFmB,qBAkFT,gCAAAV,EAAA,2HAEYT,MAFZ,wDAEuBM,KAAK,SAAAc,GAAQ,OAAIA,EAASL,SAFjD,cAEJM,EAFI,OAIJC,EAAUD,EAAQE,OAAO,SAAAC,GAAC,OAAI7I,KAAKC,MAAM4I,EAAE3I,WAAaF,KAAKG,QAC7D2I,EAASJ,EAAQE,OAAO,SAAAC,GAAC,OAAI7I,KAAKC,MAAM4I,EAAE3I,WAAaF,KAAKG,QAEhE,EAAK2D,SAAS,CACZvE,YAAauJ,EACb1D,YAAauD,IATP,kBAWDD,GAXC,yCAlFS,EAgGnB1H,WAhGmB,sCAgGN,WAAO+H,GAAP,iBAAAjB,EAAA,qEACM,EAAKU,UADX,OACPZ,EADO,OAEPoB,EAAapB,EAAKgB,OAAO,SAAArD,GAAG,OAAIA,EAAIjF,MAAMoC,cAAcuG,SAASF,KACrE,EAAKjF,SAAS,CACZvE,YAAayJ,IAJJ,yCAhGM,wDAwGnB7C,cAAgB,SAACtE,GACf,IAAMqG,EAAG,+DAA2DrG,GACpEwF,MAAMa,EAAK,CACTZ,OAAQ,WACPK,KAAKuB,OAAOC,SAASC,OAAO,2BA5Gd,EA+GnBhD,kBA/GmB,sCA+GC,WAAO1G,GAAP,eAAAoI,EAAA,4DACZI,EADY,+DACkDxI,EAAOK,WADzD,SAEZsH,MAAMa,EAAK,CACfZ,OAAQ,MACRC,KAAMC,KAAKC,UAAU/H,GACrBgI,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBC,KAAK,SAAA0B,GAAE,OAAIH,OAAOC,SAASC,OAAhB,2BATI,yCA/GD,sDAEjB,EAAKhG,MAAQ,CACX7D,YAAa,GACb6F,YAAa,GACb0B,KAAM,GACNkB,eAAgB,GAChBC,mBAAoB,IAPL,E,iFAYjBzD,KAAKgE,Y,+BA+GG,IAAD,OACP,OACE,yBAAKtE,MAAO,CAAEK,gBAAiB,YAAaD,cAAe,UACzD,kBAAC,IAAD,KACE,kBAAC,EAAD,CAActD,WAAYwD,KAAKxD,aAC/B,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACtG,GAAD,OAAW,kBAAC,EAAD,iBAAWA,EAAX,CAAkB3D,YAAa,EAAK6D,MAAM7D,YAAaC,cAAe,EAAKqI,2BACpH,kBAAC,IAAD,CAAO0B,KAAK,kBAAkBC,OAAQ,SAACtG,GAAD,OAAW,kBAAC8C,EAAD,iBAAoB9C,EAApB,CAA2BkD,kBAAmB,EAAKA,kBAAmBD,cAAe,EAAKA,cAAeF,QAAS,EAAK7C,MAAM4E,eAAgB9B,QAAS,EAAK9C,MAAM6E,mBAAoBpC,WAAY,EAAKwC,aACvP,kBAAC,IAAD,CAAOkB,KAAK,cAAcC,OAAQ,SAACtG,GAAD,OAAW,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuBU,iBAAkB,EAAKA,uBAC3F,kBAAC,IAAD,CAAO2F,KAAK,kBAAkBC,OAAQ,SAACtG,GAAD,OAAW,kBAACiC,EAAD,iBAAoBjC,EAApB,CAA2BkC,YAAa,EAAKhC,MAAMgC,YAAac,QAAS,EAAK9C,MAAM6E,mBAAoBzI,cAAe,EAAKqI,2BAC7K,kBAAC,IAAD,CAAO0B,KAAK,yBAAyBC,OAAQ,SAACtG,GAAD,OAAW,kBAACiE,EAAD,iBAA2BjE,EAA3B,CAAkC+C,QAAS,EAAK7C,MAAM4E,eAAgB9B,QAAS,EAAK9C,MAAM6E,+B,GArIjH/C,aCEvBuE,QACW,cAA7BP,OAAOC,SAASO,UAEe,UAA7BR,OAAOC,SAASO,UAEhBR,OAAOC,SAASO,SAASC,MACvB,2DCZNC,IAASJ,OAAO,kBAAC,EAAD,MAAS7C,SAASC,eAAe,SD2H3C,kBAAmBiD,WACrBA,UAAUC,cAAcC,MAAMpC,KAAK,SAAAqC,GACjCA,EAAaC,gB","file":"static/js/main.6d282c18.chunk.js","sourcesContent":["import React from 'react'\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = ({ auctionList, handleAuction }) => {\r\n  const renderDetails = (object) => {\r\n    handleAuction(object);\r\n  }\r\n\r\n  let idLink = '';\r\n  let list = auctionList !== undefined ? (auctionList.map(object =>\r\n    <tr key={object.AuktionID}>\r\n      {idLink = Date.parse(object.SlutDatum) > Date.now() ?\r\n        (<td onClick={() => { renderDetails(object) }}><Link to=\"/auctiondetails\">{object.AuktionID}</Link></td>)\r\n        :\r\n        (<td onClick={() => { renderDetails(object) }}><Link to=\"/expiredauctiondetails\">{object.AuktionID}</Link></td>)}\r\n      <td>{object.Titel}</td>\r\n      <td>{object.Beskrivning}</td>\r\n      <td>{object.Utropspris}kr</td>\r\n      <td>{object.SlutDatum !== undefined ? (object.SlutDatum.replace(\"T\", \" \")):('-')}</td>\r\n    </tr>\r\n  )) : (<tr>\r\n    <td colSpan=\"5\">Hittade inga annonser</td>\r\n  </tr>)\r\n\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Titel</th>\r\n            <th>Beskrivning</th>\r\n            <th>Utropspris</th>\r\n            <th>Slutdatum</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          {list}\r\n\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Start;\r\n\r\n\r\n","import React from 'react'\r\nimport { Navbar, Nav, Form, Button, FormControl, NavDropdown } from 'react-bootstrap'\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\n function NavComponent({ searchFunc,history }) {\r\n\r\n    let searchValue = React.createRef();\r\n\r\n    const handleSubmit = (ref, e) => {\r\n            e.preventDefault();\r\n            console.log(ref.current.value);\r\n            if (ref.current.value !== \"\") {\r\n                searchFunc(ref.current.value.toLowerCase());\r\n                history.push('/')\r\n            }\r\n            else {\r\n                return alert('You must enter a titel to search')\r\n            }\r\n        }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">Auction</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <NavDropdown title=\"Menu\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item> <Link to=\"/\">Home</Link></NavDropdown.Item>\r\n                    <NavDropdown.Item> <Link to=\"/newauction\">New ad</Link></NavDropdown.Item>\r\n                    <NavDropdown.Item> <Link to=\"/expiredauction\">Expired auctions</Link></NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Nav>\r\n            <Form inline onSubmit={(e) => { handleSubmit(searchValue, e) }}>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" ref={searchValue} />\r\n                <Button variant=\"outline-info\" type=\"submit\">Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default withRouter(NavComponent);","import React, { Component } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default class NewAuction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AuktionID: '',\r\n            Titel: '',\r\n            Beskrivning: '',\r\n            StartDatum: new Date().toISOString().slice(0, 10),\r\n            StartDatumTid: '',\r\n            SlutDatum: '',\r\n            SlutDatumTid: '',\r\n            GruppKod: 2120,\r\n            Utropspris: '',\r\n            SkapadAv: ''\r\n        }\r\n    }\r\n\r\n    addNewObject = (e) => {\r\n        let { Titel, Beskrivning, StartDatum, StartDatumTid, \r\n            SlutDatum, SlutDatumTid, GruppKod, Utropspris, SkapadAv} = this.state;\r\n        e.preventDefault();\r\n        if (this.checkValidation()) {\r\n            let jsonObject = { Titel: Titel, Beskrivning: Beskrivning, StartDatum: StartDatum+'T'+StartDatumTid, SlutDatum: SlutDatum+'T'+SlutDatumTid, Utropspris: Utropspris, GruppKod: GruppKod, SkapadAv: SkapadAv}\r\n            this.props.NewAuctionObject(jsonObject);\r\n        }\r\n        else {\r\n            return alert('Enter all values')\r\n        }\r\n\r\n    }\r\n    checkValidation = () => {\r\n        let { Titel, Beskrivning, SlutDatum, Utropspris, SkapadAv } = this.state;\r\n        if (Titel !== '' && Beskrivning !== '' && SlutDatum !== '' && Utropspris !== '' && SkapadAv !== '') {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    onClick = () => this.props.history.push(\"/\");\r\n\r\n    render() {\r\n        let centerStyle = { paddingLeft: '500px', paddingRight: '500px', paddingTop: '50px', paddingBottom: '100px', backgroundColor: 'lightgray' };\r\n        return (\r\n            <div style={centerStyle}>\r\n                <h1>Create new auction</h1>\r\n            <Form onSubmit={this.addNewObject}>                        \r\n                <Form.Group >                \r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control id=\"Titel\" type=\"text\" placeholder=\"Enter title\" onChange={this.handleChange} />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control id=\"Beskrivning\" type=\"text\" placeholder=\"Enter description\" onChange={this.handleChange} />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control required id=\"Utropspris\" type=\"number\" placeholder=\"Enter price\" onChange={this.handleChange} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        <p>Please provide a valid price.</p>\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group >\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control required id=\"SkapadAv\" type=\"text\" placeholder=\"Enter your name\" onChange={this.handleChange} />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                        <Form.Label>Auction start date</Form.Label>\r\n                        <Form.Control  disabled required id=\"StartDatum\" type=\"date\" value={this.state.StartDatum} onChange={this.handleDateChange} />\r\n                        <Form.Label>Start time</Form.Label>\r\n                        <Form.Control id=\"StartDatumTid\" as=\"select\" onChange={this.handleChange}>\r\n                                <option value=\"08:00:00\">08:00</option>\r\n                                <option value=\"08:30:00\">08:30</option>\r\n                                <option value=\"09:00:00\">09:00</option>\r\n                                <option value=\"09:30:00\">09:30</option>\r\n                                <option value=\"10:00:00\">10:00</option>\r\n                                <option value=\"10:30:00\">10:30</option>\r\n                                <option value=\"11:00:00\">11:00</option>\r\n                                <option value=\"11:30:00\">11:30</option>\r\n                                <option value=\"12:00:00\">12:00</option>\r\n                                <option value=\"12:30:00\">12:30</option>\r\n                                <option value=\"13:00:00\">13:00</option>\r\n                                <option value=\"13:30:00\">13:30</option>\r\n                                <option value=\"14:00:00\">14:00</option>\r\n                                <option value=\"14:30:00\">14:30</option>\r\n                                <option value=\"15:00:00\">15:00</option>\r\n                                <option value=\"15:30:00\">15:30</option>\r\n                                <option value=\"16:00:00\">16:00</option>\r\n                                <option value=\"16:30:00\">16:30</option>\r\n                                <option value=\"17:00:00\">17:00</option>\r\n                                <option value=\"17:30:00\">17:30</option>\r\n                                <option value=\"18:00:00\">18:00</option>\r\n                                <option value=\"18:30:00\">18:30</option>\r\n                                <option value=\"19:00:00\">19:00</option>\r\n                                <option value=\"19:30:00\">19:30</option>\r\n                                <option value=\"20:00:00\">20:00</option>\r\n                                <option value=\"20:30:00\">20:30</option>\r\n                                <option value=\"21:00:00\">21:00</option>\r\n                                <option value=\"21:30:00\">21:30</option>\r\n                                <option value=\"22:00:00\">22:00</option>\r\n                                <option value=\"22:30:00\">22:30</option>\r\n                                <option value=\"23:00:00\">23:00</option>\r\n                                <option value=\"23:30:00\">23:30</option>\r\n                                <option value=\"23:59:59\">23:59</option>\r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group >\r\n                        <Form.Label>Auction end date</Form.Label>\r\n                        <Form.Control required id=\"SlutDatum\" type=\"date\" placeholder=\"Enter end date YYYY-MM-DD\" onChange={this.handleChange} />\r\n                        <Form.Label>End time</Form.Label>\r\n                        <Form.Control id=\"SlutDatumTid\" as=\"select\" onChange={this.handleChange}>\r\n                                <option value=\"08:00:00\">08:00</option>\r\n                                <option value=\"08:30:00\">08:30</option>\r\n                                <option value=\"09:00:00\">09:00</option>\r\n                                <option value=\"09:30:00\">09:30</option>\r\n                                <option value=\"10:00:00\">10:00</option>\r\n                                <option value=\"10:30:00\">10:30</option>\r\n                                <option value=\"11:00:00\">11:00</option>\r\n                                <option value=\"11:30:00\">11:30</option>\r\n                                <option value=\"12:00:00\">12:00</option>\r\n                                <option value=\"12:30:00\">12:30</option>\r\n                                <option value=\"13:00:00\">13:00</option>\r\n                                <option value=\"13:30:00\">13:30</option>\r\n                                <option value=\"14:00:00\">14:00</option>\r\n                                <option value=\"14:30:00\">14:30</option>\r\n                                <option value=\"15:00:00\">15:00</option>\r\n                                <option value=\"15:30:00\">15:30</option>\r\n                                <option value=\"16:00:00\">16:00</option>\r\n                                <option value=\"16:30:00\">16:30</option>\r\n                                <option value=\"17:00:00\">17:00</option>\r\n                                <option value=\"17:30:00\">17:30</option>\r\n                                <option value=\"18:00:00\">18:00</option>\r\n                                <option value=\"18:30:00\">18:30</option>\r\n                                <option value=\"19:00:00\">19:00</option>\r\n                                <option value=\"19:30:00\">19:30</option>\r\n                                <option value=\"20:00:00\">20:00</option>\r\n                                <option value=\"20:30:00\">20:30</option>\r\n                                <option value=\"21:00:00\">21:00</option>\r\n                                <option value=\"21:30:00\">21:30</option>\r\n                                <option value=\"22:00:00\">22:00</option>\r\n                                <option value=\"22:30:00\">22:30</option>\r\n                                <option value=\"23:00:00\">23:00</option>\r\n                                <option value=\"23:30:00\">23:30</option>\r\n                                <option value=\"23:59:59\">23:59</option>\r\n                        </Form.Control>\r\n                </Form.Group>          \r\n                <Button type=\"submit\" variant=\"success\" onClick={this.addNewObject}>Save</Button>\r\n                <Button variant=\"danger\" onClick={this.onClick}>Cancel</Button>\r\n            </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ExpiredAuction({ expiredList, handleAuction }) {\r\n\r\n    const renderDetails = (object) => {\r\n        handleAuction(object);\r\n    }\r\n\r\n    let result = expiredList.length !== 0 ?\r\n        ( expiredList.map(obj =>\r\n            <tr key={obj.AuktionID}>\r\n                <td onClick={() => { renderDetails(obj) }}><Link to=\"/expiredauctiondetails\">{obj.AuktionID}</Link></td>\r\n                <td>{obj.Titel}</td>\r\n                <td>{obj.Beskrivning}</td>\r\n                <td>{obj.SlutDatum !== undefined ? (obj.SlutDatum.replace(\"T\", \" \")):('-')}</td>\r\n                <td>{obj.SkapadAv}</td>\r\n            </tr> ))\r\n        :\r\n        ( <h2>No auctions found</h2> );\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID #</th>\r\n                    <th>Title</th>\r\n                    <th>Description</th>\r\n                    <th>End date</th>\r\n                    <th>Seller</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {result}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form,Button } from 'react-bootstrap';\r\n\r\nexport default class NewBid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bid: 0,\r\n            bidName: ''\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    placeBid = () => {\r\n        if (this.state.bidName === \"\" || this.state.bid === null) {\r\n            return (alert('enter all values'))\r\n        }\r\n        else if (this.state.bid < this.props.pris) {\r\n            return (alert('place a higher bid'))\r\n        }\r\n        \r\n        this.props.newBidFunc(this.state.bid, this.props.identitet, this.state.bidName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ paddingLeft: '500px', paddingRight: '500px',paddingBottom:'300px', border: '1px solid black'}}>\r\n                <br></br>\r\n                <h2>Place new bid</h2>\r\n                <Form.Group >\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control id=\"bidName\" type=\"text\" placeholder=\"Enter your name\" onChange={this.handleChange} />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control required id=\"bid\" type=\"number\" placeholder=\"Enter price\" onChange={this.handleChange} />\r\n                    <br></br>\r\n                    <Button type=\"submit\" variant=\"success\" onClick={this.placeBid}>Place bid</Button>\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport NewBid from './NewBid';\r\nimport { Button, Form, Table} from 'react-bootstrap';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nexport default function AuctionDetails({auction,bidList,newBidFunc,deleteAuction,updateAuctionFunc}) {\r\n\r\n    const handleSubmit = () => {\r\n        let object = {AuktionID: auction.AuktionID, Titel: '', Beskrivning: '', Utropspris: '', SlutDatum: '',\r\n        StartDatum: auction.StartDatum, GruppKod: 2120, SkapadAv: auction.SkapadAv};\r\n        object.Titel = document.getElementById('Titel').value;\r\n        object.Beskrivning = document.getElementById('Beskrivning').value;\r\n        object.Utropspris = document.getElementById('Utropspris').value;\r\n        object.SlutDatum = document.getElementById('SlutDatum').value + 'T'+document.getElementById('SlutDatumTid').value;\r\n        console.log(object);\r\n        console.log(document.getElementById('SlutDatum').value + 'T'+document.getElementById('SlutDatumTid').value );\r\n        updateAuctionFunc(object);\r\n\r\n    }\r\n   const updateAuction = () => { confirmAlert ({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div>\r\n                <Form>\r\n                <Form.Group >\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control id=\"Titel\" type=\"text\" defaultValue={auction.Titel}  />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control id=\"Beskrivning\" type=\"text\" defaultValue={auction.Beskrivning} />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control required id=\"Utropspris\" type=\"number\" defaultValue={Number(auction.Utropspris)}  />\r\n                </Form.Group>\r\n                <Form.Group >\r\n                        <Form.Label>Auction end date</Form.Label>\r\n                        <Form.Control required id=\"SlutDatum\" type=\"date\" placeholder=\"Enter end date YYYY-MM-DD\" />\r\n                        <Form.Label>End time</Form.Label>\r\n                        <Form.Control id=\"SlutDatumTid\" as=\"select\" >\r\n                                <option value=\"08:00:00\">08:00</option>\r\n                                <option value=\"08:30:00\">08:30</option>\r\n                                <option value=\"09:00:00\">09:00</option>\r\n                                <option value=\"09:30:00\">09:30</option>\r\n                                <option value=\"10:00:00\">10:00</option>\r\n                                <option value=\"10:30:00\">10:30</option>\r\n                                <option value=\"11:00:00\">11:00</option>\r\n                                <option value=\"11:30:00\">11:30</option>\r\n                                <option value=\"12:00:00\">12:00</option>\r\n                                <option value=\"12:30:00\">12:30</option>\r\n                                <option value=\"13:00:00\">13:00</option>\r\n                                <option value=\"13:30:00\">13:30</option>\r\n                                <option value=\"14:00:00\">14:00</option>\r\n                                <option value=\"14:30:00\">14:30</option>\r\n                                <option value=\"15:00:00\">15:00</option>\r\n                                <option value=\"15:30:00\">15:30</option>\r\n                                <option value=\"16:00:00\">16:00</option>\r\n                                <option value=\"16:30:00\">16:30</option>\r\n                                <option value=\"17:00:00\">17:00</option>\r\n                                <option value=\"17:30:00\">17:30</option>\r\n                                <option value=\"18:00:00\">18:00</option>\r\n                                <option value=\"18:30:00\">18:30</option>\r\n                                <option value=\"19:00:00\">19:00</option>\r\n                                <option value=\"19:30:00\">19:30</option>\r\n                                <option value=\"20:00:00\">20:00</option>\r\n                                <option value=\"20:30:00\">20:30</option>\r\n                                <option value=\"21:00:00\">21:00</option>\r\n                                <option value=\"21:30:00\">21:30</option>\r\n                                <option value=\"22:00:00\">22:00</option>\r\n                                <option value=\"22:30:00\">22:30</option>\r\n                                <option value=\"23:00:00\">23:00</option>\r\n                                <option value=\"23:30:00\">23:30</option>\r\n                                <option value=\"23:59:59\">23:59</option>\r\n                        </Form.Control>\r\n                </Form.Group>\r\n              \r\n              <Button variant=\"success\"\r\n                onClick={() => {\r\n                handleSubmit();\r\n                 onClose();\r\n                }}\r\n                >\r\n                Save changes\r\n                    </Button>\r\n                        &nbsp;\r\n                    <Button variant=\"danger\" onClick={onClose}>Cancel</Button>\r\n                </Form>\r\n              </div>\r\n          );\r\n        }\r\n      })};\r\n\r\n\r\n    const submit = () => { confirmAlert ({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className='custom-ui'>\r\n              <h1>Are you sure?</h1>\r\n              <p>You want to delete this auction?</p>\r\n              <Button variant=\"danger\"\r\n                onClick={() => {\r\n                deleteAuction(auction.AuktionID);\r\n                onClose();\r\n                }}>\r\n                Yes\r\n              </Button>\r\n              &nbsp;\r\n              <Button variant=\"primary\" onClick={onClose}>No</Button>\r\n            </div>\r\n          );\r\n        }\r\n      })};\r\n\r\n      let result = auction !== undefined ? \r\n    ( <div>\r\n            <h1>{auction.Titel} #{auction.AuktionID}</h1><br></br>\r\n            <h5 style={{color:'red'}}>End date: {auction.SlutDatum !== undefined ? (auction.SlutDatum.replace(\"T\", \" \")):('-')}</h5>\r\n            <br></br>\r\n            <h3>Starting price: {auction.Utropspris}kr</h3>\r\n            <br></br>\r\n      </div> ) \r\n    : \r\n    ( <h1> Internal error, try again </h1> );\r\n    \r\n    let bids = bidList.length !== 0 ? (\r\n        bidList.map(bid => \r\n          <tr>\r\n            <td>{bid.BudID}</td>\r\n            <td>{bid.Budgivare}</td>\r\n            <td>{bid.Summa}</td>\r\n          </tr>\r\n        ))\r\n    :\r\n    ( \r\n           <tr>\r\n             <td><h3>No bids made.</h3></td>\r\n             <td><Button onClick={() => {submit()}} variant=\"danger\" >Delete</Button> </td>\r\n             <td><Button onClick={() => {updateAuction()}} variant=\"primary\" >Update</Button></td>\r\n             </tr>  \r\n          \r\n             \r\n       );\r\n        \r\n    \r\n    \r\n    return (\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightgray'}}>\r\n          {result}\r\n          <Table striped bordered hover variant=\"dark\">\r\n              <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                {bids}\r\n              </tbody>\r\n          </Table>\r\n          <NewBid pris={auction.Utropspris} identitet={auction.AuktionID} newBidFunc={newBidFunc}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default function ExpiredAuctionDetails({auction,bidList}) {\r\n    \r\n    let bids = bidList.length !== 0 ? \r\n    ( \r\n        <tr>\r\n            <td>{bidList[bidList.length -1].BudID}</td>\r\n            <td>{bidList[bidList.length -1].Budgivare}</td>\r\n            <td>{bidList[bidList.length -1].Summa}kr</td>\r\n        </tr>\r\n   )\r\n    :\r\n    ( <h2> No bids made. </h2> );\r\n\r\n    let result = auction !== undefined ? \r\n    ( <div>\r\n            <h1>{auction.Titel}</h1>\r\n            <br></br>\r\n            <h3>Starting price: {auction.Utropspris}kr</h3>\r\n            <h5 style={{color: 'red'}}>Auction ended: {auction.SlutDatum !== undefined ? (auction.SlutDatum.replace(\"T\", \" \")):('-')}</h5>\r\n      </div> ) \r\n    : \r\n    ( <h1> Server error, try again  </h1> );\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{textAlign: 'center'}}>\r\n                {result}\r\n            </div>\r\n            <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Final price</th>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                        {bids}\r\n                    </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport Start from './components/Start';\r\nimport NavComponent from './components/NavComponent';\r\nimport NewAuction from './components/NewAuction';\r\nimport ExpiredAuction from './components/ExpiredAuction';\r\nimport AuctionDetails from './components/AuctionDetails';\r\nimport ExpiredAuctionDetails from './components/ExpiredAuctionDetails';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n\r\nexport default class ApiController extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      auctionList: [],\r\n      expiredList: [],\r\n      bids: [],\r\n      auctionDetails: [],\r\n      auctionDetailsBids: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  NewAuctionObject = (object) => {\r\n    const url = `http://nackowskis.azurewebsites.net/api/Auktion/2120`;\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(object),\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(function (data) {\r\n      console.log(data);\r\n    })\r\n    return (alert('Auktion skapad'))\r\n  }\r\n\r\n  handleAuctionDetails = async (object) => {\r\n    let bids = await this.getBids(object.AuktionID);\r\n    console.log(bids);\r\n    console.log(object);\r\n    this.setState({\r\n      auctionDetails: object,\r\n      auctionDetailsBids: bids\r\n    })\r\n  }\r\n\r\n  getBids = async (id) => {\r\n    const url = `http://nackowskis.azurewebsites.net/api/bud/2120/${id}`;\r\n    let bids = await fetch(url).then(res => res.json());\r\n    return bids;\r\n  }\r\n  newBid = async (bid, auctionId, bidName) => {\r\n\r\n    const url = `http://nackowskis.azurewebsites.net/api/bud/2120/${auctionId}`;\r\n    let bids = this.state.auctionDetailsBids;\r\n\r\n    let object = { Budgivare: bidName, Summa: bid, AuktionID: auctionId, BudID: 2000 };\r\n    console.log(object);\r\n    if (bids.length !== 0) {\r\n      if (bids[bids.length - 1].Summa < bid) {\r\n        this.placeBid(url, object);\r\n        alert('New bid placed')\r\n      } else {\r\n        return alert('place a higher bid');\r\n      }\r\n    }\r\n    else {\r\n      this.placeBid(url, object);\r\n      alert('New bid placed')\r\n    }\r\n  }\r\n\r\n  placeBid = (url, object) => {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(object),\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      mode: 'cors'\r\n    }).then(function (data) {\r\n      console.log('Request success: ', 'posten skapad');\r\n    })\r\n  }\r\n\r\n\r\n  getData = async () => {\r\n    const url = `http://nackowskis.azurewebsites.net/api/Auktion/2120`;\r\n    let apiData = await fetch(url).then(response => response.json());\r\n\r\n    let expired = apiData.filter(x => Date.parse(x.SlutDatum) < Date.now());\r\n    let active = apiData.filter(x => Date.parse(x.SlutDatum) > Date.now());\r\n\r\n    this.setState({\r\n      auctionList: active,\r\n      expiredList: expired\r\n    })\r\n    return apiData;\r\n  }\r\n\r\n  searchFunc = async (searchVal) => {\r\n    let data = await this.getData();\r\n    let searchList = data.filter(obj => obj.Titel.toLowerCase().includes(searchVal));\r\n    this.setState({\r\n      auctionList: searchList\r\n    })\r\n  }\r\n\r\n  deleteAuction = (id) => {\r\n    const url = `http://nackowskis.azurewebsites.net/api/Auktion/2120/${id}`\r\n    fetch(url, {\r\n      method: 'delete'\r\n    }).then(window.location.assign('http://localhost:3000'))\r\n  }\r\n\r\n  updateAuctionFunc = async (object) => {\r\n    const url = `http://nackowskis.azurewebsites.net/api/Auktion/2120/${object.AuktionID}`\r\n    await fetch(url, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(object),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(rs => window.location.assign(`http://localhost:3000`))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: 'lightgray', paddingBottom: '500px' }}>\r\n        <BrowserRouter>\r\n          <NavComponent searchFunc={this.searchFunc} />\r\n          <Route exact path=\"/\" render={(props) => <Start {...props} auctionList={this.state.auctionList} handleAuction={this.handleAuctionDetails} />} />\r\n          <Route path=\"/auctiondetails\" render={(props) => <AuctionDetails {...props} updateAuctionFunc={this.updateAuctionFunc} deleteAuction={this.deleteAuction} auction={this.state.auctionDetails} bidList={this.state.auctionDetailsBids} newBidFunc={this.newBid} />} />\r\n          <Route path=\"/newauction\" render={(props) => <NewAuction {...props} NewAuctionObject={this.NewAuctionObject} />} />\r\n          <Route path=\"/expiredauction\" render={(props) => <ExpiredAuction {...props} expiredList={this.state.expiredList} bidList={this.state.auctionDetailsBids} handleAuction={this.handleAuctionDetails} />} />\r\n          <Route path=\"/expiredauctiondetails\" render={(props) => <ExpiredAuctionDetails {...props} auction={this.state.auctionDetails} bidList={this.state.auctionDetailsBids} />} />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}