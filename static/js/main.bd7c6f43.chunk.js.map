{"version":3,"sources":["serviceWorker.js","components/WeatherDetails.js","components/Clock.js","components/WeatherJumbotron.js","components/Search.js","components/Favourites.js","components/MainApp.js","index.js"],"names":["Boolean","window","location","hostname","match","WeatherDetails","console","log","data","length","map","daily","i","key","style","width","float","backgroundColor","alt","src","weather","icon","dt_txt","substring","Math","round","main","temp_max","temp_min","Clock","props","tick","state","seconds","setState","minutes","hour","Date","getHours","getMinutes","getSeconds","helperZero","setInterval","this","date","toLocaleDateString","textAlign","Component","WeatherJumbotron","WeatherData","city","addCookie","jumbotronData","deleteCookie","shift","undefined","name","jumbotron","className","cursor","onClick","temp","height","Search","searchPlace","e","preventDefault","apiCallCitySearch","searchValue","handleChange","target","value","onSubmit","htmlFor","id","placholder","type","onChange","Favourites","cookies","favorites","cookie","replace","MainApp","every_eight","arr","eight","filter","arrayToState","cookieArray","document","split","forEach","push","indexOf","cookieList","apiCall","position","a","lat","coords","latitude","long","longitude","url","fetch","then","response","json","list","fiveDayPrognose","weatherData","cityName","res","navigator","geolocation","getCurrentPosition","React","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd7c6f43.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst WeatherDetails = ({WeatherDetails}) => {\r\n    console.log(WeatherDetails);\r\n    const data = WeatherDetails.length !== 0 ? \r\n        (\r\n        WeatherDetails.map((daily,i) => \r\n            <div key={i} style={{width: '212.6px',float: 'left', backgroundColor: 'lightgray'}}>\r\n                <img  alt=\"\" src={`http://openweathermap.org/img/w/${daily.weather[0].icon}.png`} />\r\n                <h5>{daily.dt_txt.substring(0,11)}</h5><br></br>\r\n                <p>Max: {Math.round(daily.main.temp_max)}°C | Min: {Math.round(daily.main.temp_min)}°C </p>\r\n            </div>)\r\n        ) \r\n        : (<p>Loading.....</p>)\r\n\r\n    return(\r\n        <div>\r\n            {data}\r\n        </div>\r\n    )\r\n}\r\nexport default WeatherDetails;","import React, {Component} from 'react';\r\n\r\nclass Clock extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            hour: new Date().getHours(),\r\n            minutes: new Date().getMinutes(),\r\n            seconds: new Date().getSeconds(),\r\n            helperZero: '0'\r\n        }\r\n    }    \r\n   componentDidMount(){\r\n       setInterval(this.tick,1000);\r\n   }\r\n\r\n   tick = () => {\r\n       if(this.state.seconds ===  59 )\r\n       {\r\n           this.setState({\r\n               minutes: this.state.minutes +1,\r\n               seconds: 0\r\n           })\r\n       }\r\n       this.state.minutes === 60 && this.state.seconds === 0 ? \r\n       ( this.setState({\r\n        hour: this.state.hour + 1,\r\n        minutes: 0,\r\n        seconds: 0\r\n    }))\r\n     : \r\n     ( this.setState({\r\n        seconds: this.state.seconds +1\r\n    }));\r\n       \r\n \r\n   }\r\n   \r\n    \r\n    render(){   \r\n        const date = new Date().toLocaleDateString();\r\n        return(\r\n            <div style={{textAlign: \"center\"}}>\r\n                <h3>{date} - {this.state.hour}:{this.state.minutes}:{this.state.seconds}</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Clock;","import React from 'react'\r\nimport WeatherDetails from './WeatherDetails';\r\nimport Clock from './Clock';\r\n\r\nexport default function WeatherJumbotron({WeatherData,city,addCookie, deleteCookie}) {\r\n\r\n    const jumbotronData =  WeatherData.shift();\r\n    if(jumbotronData !== undefined){ jumbotronData.name = city}\r\n\r\n    const jumbotron = jumbotronData !== undefined ? (\r\n        \r\n        <div className=\"center-align parallax-container indigo lighten-4\">\r\n            <button style={{cursor: 'pointer'}} onClick={() => {addCookie(jumbotronData.name)}}>Add as favorite</button>\r\n            \r\n            <h2>{jumbotronData.name}</h2>\r\n            <h4>{Math.round(jumbotronData.main.temp)}°C</h4>\r\n            <img style={{height: '200px',width: '200px' }}alt=\"\" src={`http://openweathermap.org/img/w/${jumbotronData.weather[0].icon}.png`}/>\r\n            <Clock/>\r\n        </div>)\r\n        : \r\n        ( null );\r\n   \r\n    \r\n        \r\n        return (\r\n        <div style={{textAlign: 'center'}}>\r\n                {jumbotron}\r\n            <WeatherDetails WeatherDetails={WeatherData} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchValue: ''\r\n        }\r\n    \r\n    }\r\n    searchPlace = (e) => {\r\n        e.preventDefault();\r\n        this.props.apiCallCitySearch(this.state.searchValue);\r\n        this.setState({\r\n            searchValue: ''\r\n        })\r\n        console.log(this.state.searchValue)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            searchValue: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-full\">\r\n                <nav>\r\n                    <div className=\"nav-wrapper\">\r\n                        <form onSubmit={this.searchPlace}>\r\n                            <div className=\"input-field\">\r\n                                    <label htmlFor=\"search\"><i className=\"material-icons\">Search</i></label>                     \r\n                                <input id=\"search\" placholder=\"Search\" type=\"text\" onChange={this.handleChange} value={this.state.searchValue}/>\r\n                                    <i className=\"material-icons red-text\"></i>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Favourites extends Component {\r\n    \r\n    render() {\r\n        let cookies = this.props.favorites !== undefined ? this.props.favorites.map((cookie,i) => \r\n            <li style={{cursor: 'pointer'}} key={i} onClick={() => {this.props.apiCallCitySearch(cookie.replace(/\"/g,''))}}>\r\n            {cookie.replace(/\"/g,'')}\r\n            </li>\r\n        ) : null ;\r\n        console.log(this.props.favorites);\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col 1 s12\">\r\n                <h5 className=\"white-text\">Favorites</h5>\r\n                <ul>\r\n                  {cookies}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport WeatherJumbotron from './WeatherJumbotron';\r\nimport Search from './Search';\r\nimport Favourites from './Favourites';\r\n\r\nexport default class MainApp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            weatherData: [],\r\n            cookieList: [],\r\n            cityName: '',\r\n\r\n        }\r\n    }\r\n    \r\ncomponentDidMount(){\r\n    navigator.geolocation.getCurrentPosition(this.apiCall);\r\n    this.arrayToState();\r\n}\r\n every_eight = (arr,eight) => arr.filter((e,i) => i % eight === eight -1);\r\n\r\n arrayToState = () =>{\r\n    let allCookies = document.cookie;\r\n    let cookieArray = allCookies.split(';');\r\n    var arrayToState = [];\r\n    cookieArray.forEach(cookie => {\r\n        arrayToState.push(cookie.substring(cookie.indexOf('=') +1 ))\r\n    });\r\n    this.setState({\r\n        cookieList: arrayToState\r\n    });\r\n    this.apiCall();\r\n }\r\n\r\n apiCall = async (position) => {\r\n\r\n    let lat = position.coords.latitude;\r\n    let long = position.coords.longitude;\r\n\r\n    const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&units=metric&appid=bbcdd1baf23ed7f4023d83e346f9b188`;\r\n    let data = await fetch(url).then(response => response.json());\r\n    \r\n    if(data.list.length !== undefined)\r\n    {\r\n       const fiveDayPrognose = this.every_eight(data.list, 6);\r\n       this.setState({\r\n           weatherData: fiveDayPrognose,\r\n           cityName: data.city.name\r\n       })\r\n    }\r\n    else {\r\n        this.setState({\r\n            weatherData: 'Ingen stad hittades'\r\n        })\r\n    }\r\n    \r\n}\r\n\r\napiCallCitySearch = async (city) => {\r\n    const url = `https://api.openweathermap.org/data/2.5/forecast?units=metric&appid=bbcdd1baf23ed7f4023d83e346f9b188&q=${city}`;\r\n    let data = await fetch(url).then(res => res.json());\r\n    \r\n    if(data.list.length !== undefined){\r\n\r\n       const fiveDayPrognose = this.every_eight(data.list, 6);\r\n\r\n       this.setState({\r\n           weatherData: fiveDayPrognose,\r\n           cityName: data.city.name\r\n        })\r\n    } \r\n    else {\r\n        this.setState({\r\n            weatherData: 'Ingen stad hittades'\r\n        })\r\n    }\r\n}\r\naddCookie = (name) => {\r\n    \r\n    document.cookie = name+\"= \"+name;\r\n    this.arrayToState();\r\n    \r\n}\r\ndeleteCookie = (name) => {\r\n    document.cookie = name + \"= \" + name +\"; expires=Thu, 18 Dec 2013 12:00:00 UTC\";\r\n    this.arrayToState();\r\n}\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Search apiCallCitySearch={this.apiCallCitySearch}/>\r\n                <WeatherJumbotron \r\n                WeatherData={this.state.weatherData} \r\n                city={this.state.cityName} \r\n                addCookie={this.addCookie} \r\n                cookieList={this.state.cookieList} \r\n                deleteCookie={this.deleteCookie} \r\n                />\r\n                \r\n                <footer className=\"page-footer\">\r\n                <Favourites favorites={this.state.cookieList} apiCallCitySearch={this.apiCallCitySearch}/>\r\n                </footer>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from './components/MainApp';\n\nReactDOM.render(\n<MainApp />,\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}